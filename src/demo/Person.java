package demo;

public class Person {
    String name;//成员变量或实例变量
    //static 是一个修饰符，用于修饰成员
    /*
    * static修饰的成员被所有的对象所共享
    * static优先于对象存在，因为static的成员随着类的加载就已经存在了
    * static修饰的成员多了一种调用方式，可以直接被类名所调用，类名.静态成员
    * static 静态修饰的数据是共享数据，对象中存储的是特有数据
    * */
    //成员变量和静态变量区别
    /**
     * 1.成员变量随对象的创建而存在，随对象的回收而释放，静态变量会随着类的加载而存在，随着类的消失而消失（两个变量的生命周期不一样）
     *2.调用方式不同，成员变量只能被对象那个调用，静态变量可以被对象调用也可以被类名调用（静态变量建议用类名调用）
     * 3。别名不同，成员变量也称实例变量，静态变量也称类变量
     * 4。数据的存储位置不同，成员变量数据存储在堆内存的对象中，所以也叫对象的特有数据，静态变量数据存储方法区（的静态区中），所以也叫对象的共享数据
     *
     *静态使用的注意事项
     * 1。静态方法只能访问静态成员，（访问局限性）（非静态既可以访问静态，又可以访问非静态）
     * 2。静态方法中不可以使用this或者super关键字
     * 3。主函数是静态的
     *
     */

   static String country = "CN";//静态变量或类变量
    public  void show(){
        System.out.println(country+":"+name);
    }
}
class StaticDemo{
    /*
    * 主函数特殊之处
    * 1。格式是固定的
    * 2。被jvm所识别和调用
    * public ：因为权限必须是最大的
    * static：虚拟机调用函数是不需要对象的，直接用主函数所属类名调用即可
    * void：主函数没有具体的返回值
    * main:函数名不是关键字，只是一个jvm识别的固定名字
    * String[] argv：这是主函数的参数列表，是一个数组类型的参数，而且元素都是字符串类型
    * */

    /**
     * 静态什么时候用
     * 静态变量【
     * 1。分析对象中所具备的成员变量的值都是相同的这时这个成员就可以被静态修饰
     * 只要是数据在对象中都是不同的，就是对象的特有数据，必须存储在对象中，是非静态的
     * 如果是相同的数据，对象不需要做修改，只需要使用即可，不需要存储在对象中，定义称静态的
     * 】
     * 2。静态函数【
     * 1。函数是否用静态修饰，就参考一点，该函数功能是否有访问到对象中的特有数据
     * 简单点说，该功能是否需要访问非静态的成员变量，如果需要，该功能就是非静态的
     * 如果不需要，就可以将该功能定义成静态的,当然也可以定义成非静态，但是非静态需要通过对象调用，而仅创建
     * 对象调用非静态的没有访问特有数据的方法，该对象的创建是没有意义的
     * 】
     *
     * 静态代码块
     * 1。随着类的加载而执行
     * 作用：用于给类进行初始化
     */
    public  static void main(String argv[]){
        Person p = new Person();
        p.name = "张三";
        p.country = "中国";
        p.show();
        System.out.println(Person.country);
//        System.out.println(argv[0]);
    }
}
/**
 *
 */

